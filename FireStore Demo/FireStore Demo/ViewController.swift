//
//  ViewController.swift
//  FireStore Demo
//
//  Created by Duc Dang on 6/25/20.
//  Copyright Â© 2020 Duc Dang. All rights reserved.
//

import UIKit
import Firebase

class ViewController: UIViewController {
    
    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view.
        
        //        let db = Firestore.firestore()
        
        //
        //   adding a document with a specific ID db.collection("users").document("userid123").setData(["firstname":"Duc","lastname":"Dang","age":27])
        
        // Adding a document with an autogenerated id
        //        db.collection("users").addDocument(data: ["firstname":"homo", "lastname":"no"])
        
        
        // Adding a document with an autogenerated ID, while getting a reference to the id
        //        let myNewDoc = db.collection("users").document()
        //        myNewDoc.setData(["firstname":"homo1", "lastname":"no1", "id":myNewDoc.documentID])
        
        // OVerwrite the document
        //        db.collection("users").document("userid123").setData(["fName":"Ducuto"])
        
        // Add new field and update to and existing document by overwriting existed data
        //        db.collection("users").document("userid123").setData(["lname":"Dang2"], merge: true)
        
        // Updating without overwriting
        //        db.collection("users").document("userid123").updateData(["fName":"Ducuto2"])
        
        //Delete Document
        //        db.collection("users").document("zyMAE6Yh1QKD6HSRF2Np").delete()
        
        // db.collection("users").document("userid123").updateData(["fName":FieldValue.delete()])
        
        // Adding a document with autogenerated id + handling error
        //        db.collection("users").addDocument(data: [:]) { (error) in
        //            if error == nil {
        //                // Operation completed successfully
        //            } else {
        //                // ERROR!
        //            }
        //        }
        
        // READING DATABASE I.
        
        //        db.collection("users").document("hlDpDWOccTbM1pSbMIY2").getDocument { (docSnapshot, error) in
        //            if error == nil && docSnapshot != nil && docSnapshot!.data() != nil {
        //                print(docSnapshot!.data())
        //            }
        //        }
        
        // Reading a collection of documents
        //        db.collection("users").getDocuments { (querySnapshot, error) in
        //
        //            if error == nil && querySnapshot != nil {
        //                // Get the collection of documents
        //                for document in querySnapshot!.documents {
        //                    print(document.documentID)
        //                }
        //            }
        //        }
        
        // READING DATABASE II.
        
        // Realtime Listening for changes
        //        let listener = db.collection("users").document("userid123").addSnapshotListener { (docSnapshot, error) in
        //            if error == nil && docSnapshot != nil && docSnapshot!.data() != nil {
        //                            print(docSnapshot!.data())
        //                        }
        //        }
        //        listener.remove()
        
        // Listening for changes in a collection
        //        let listener =  db.collection("users").addSnapshotListener { (querySnapshot, error) in
        //            // Check for errors
        //            if error == nil && querySnapshot != nil {
        //                // Listening where the data has changed, not all collections
        //                for change in querySnapshot!.documentChanges {
        //                    print(change.document.data())
        //                }
        //            }
        //    }
        
        // QUERY DATA :
        
        //        let query = db.collection("users").whereField("age", isLessThan: 30)
        
        //        let query = db.collection("users").whereField("lname", in: ["Dang2", "Dang1"])
        
        //                let query = db.collection("users").whereField("pets", arrayContains: ["Dog", "Cat"])
        
        //                let query = db.collection("users").whereField("pets", arrayContains: ["dog","cat"])
        //
        //                // Get data
        //                    query.getDocuments { (snapshot, error) in
        //
        //                    let docs = snapshot!.documents
        //
        //                    for doc in docs {
        //                        print(doc.documentID)
        //                    }
        //                }
        let db = Firestore.firestore()
        
        let newData:[String:Any] = ["fname":"Duc", "lName":"Dang", "age":26]
        
        db.collection("users").addDocument(data: newData)
    
    }
//    func fetchEmployeeName ( id:Int, )
    
}

